[project]
name = "backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "asyncpg>=0.30.0",
    "email-validator>=2.3.0",
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "injector>=0.22.0",
    "pyjwt>=2.10.1",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.20",
    "sqlalchemy>=2.0.43",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = ["pytest>=8.4.2", "pytest-cov>=7.0.0"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py312
log_file = tox.log

[testenv]
runner = uv-venv-runner
deps = 
    pytest
    pytest-cov
commands = 
    pytest -v --cov=src --cov-report=html --cov-report=term-missing --cov-report=xml tests/
setenv =
    PYTHONPATH = {toxinidir}/src
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}

[testenv:coverage]
deps = 
    coverage[toml]
commands =
    coverage combine
    coverage report
    coverage html
depends = py312
"""

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["--strict-markers", "--strict-config", "--verbose"]
filterwarnings = ["error", "ignore::UserWarning", "ignore::DeprecationWarning"]

[tool.coverage.run]
source = ["src"]
branch = true
omit = ["tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
